name: builds
on:
  push:
    branches:
      - master
  pull_request:

env:
  VERBOSE: 1
jobs:
  generic:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y gcc make autoconf automake libtool pkg-config libzmq3-dev libzmq5 libczmq-dev libczmq4 libprotobuf-c-dev protobuf-c-compiler libjansson-dev libjansson4 check libhwloc-dev libpapi-dev mpich libomp-dev libomp5
      - name: install bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          git checkout v1.9.0
          sudo ./install.sh /usr
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure
        run: |
          ./autogen.sh
          mkdir build
          ./configure --prefix=`pwd`/build
      - run: make
      - run: make check
      - run: make install
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: generic
          path: |
            config.log
            *.log
  out-of-tree:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y gcc make autoconf automake libtool pkg-config libzmq3-dev libzmq5 libczmq-dev libczmq4 libprotobuf-c-dev protobuf-c-compiler libjansson-dev libjansson4 check libhwloc-dev libpapi-dev mpich libomp-dev libomp5
      - name: install bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          git checkout v1.9.0
          sudo ./install.sh /usr
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure
        run: |
          ./autogen.sh
          mkdir out
          cd out
          mkdir build
          ../configure --prefix=`pwd`/build
      - run: make
        working-directory: out
      - run: make check
        working-directory: out
      - run: make install
        working-directory: out
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: out-of-tree
          path: |
            out/config.log
            out/*.log
  valgrind:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y gcc make autoconf automake libtool pkg-config libzmq3-dev libzmq5 libczmq-dev libczmq4 libprotobuf-c-dev protobuf-c-compiler libjansson-dev libjansson4 check libhwloc-dev valgrind libpapi-dev mpich libomp-dev libomp5
      - name: install bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          git checkout v1.9.0
          sudo ./install.sh /usr
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure
        run: |
          ./autogen.sh
          mkdir build
          ./configure --prefix=`pwd`/build --enable-valgrind
      - run: make
      - run: make check-valgrind
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: valgrind
          path: |
            config.log
            *.log
  nix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-23.05
      - run: nix-build -A libnrm
  oneapi:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    env:
      CC: 'icx'
    steps:
      - name: oneapi apt repo
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
      - name: oneapi install
        run: |
          sudo apt-get update
          sudo apt-get install -y intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic intel-oneapi-mpi intel-oneapi-mpi-devel
      - run: sudo apt-get install -y gcc make autoconf automake libtool pkg-config libzmq3-dev libzmq5 libczmq-dev libczmq4 libprotobuf-c-dev protobuf-c-compiler libjansson-dev libjansson4 check libhwloc-dev libpapi-dev
      - name: install bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          git checkout v1.9.0
          sudo ./install.sh /usr
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure
        run: |
          source /opt/intel/oneapi/setvars.sh
          ./autogen.sh
          mkdir build
          ./configure --prefix=`pwd`/build
          make
          make check
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: oneapi
          path: |
            config.log
  geopm:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - run: sudo add-apt-repository ppa:geopm/release
      - run: sudo apt-get update
      - run: sudo apt-get install -y gcc make autoconf automake libtool pkg-config libzmq3-dev libzmq5 libczmq-dev libczmq4 libprotobuf-c-dev protobuf-c-compiler libjansson-dev libjansson4 check libhwloc-dev libpapi-dev mpich libomp-dev libomp5 geopm-service libgeopmd-dev
      - name: install bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          git checkout v1.9.0
          sudo ./install.sh /usr
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure
        run: |
          ./autogen.sh
          mkdir build
          ./configure --prefix=`pwd`/build --with-geopm
      - run: make
      - run: make check
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: geopm
          path: |
            config.log
            *.log
  distcheck:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y gcc make autoconf automake libtool pkg-config libzmq3-dev libzmq5 libczmq-dev libczmq4 libprotobuf-c-dev protobuf-c-compiler libjansson-dev libjansson4 check libhwloc-dev libpapi-dev mpich libomp-dev libomp5
      - name: install bats
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          git checkout v1.9.0
          sudo ./install.sh /usr
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: configure
        run: |
          ./autogen.sh
          mkdir build
          ./configure --prefix=`pwd`/build
      - run: make
      - run: make distcheck
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: distcheck
          path: |
            config.log
